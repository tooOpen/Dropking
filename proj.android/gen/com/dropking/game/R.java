/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.dropking.game;

public final class R {
    public static final class attr {
        /**  Text color. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int TextColor=0x7f010013;
        /**  Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int TextSize=0x7f010014;
        /**  We need a mask drawable to mask the background, then draw the track 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int backgroundMask=0x7f010012;
        /**  drawablw to use when the switch is in the unchecked/"off" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOff=0x7f010005;
        /**  drawablw to use when the switch is in the checked/"on" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int drawableOn=0x7f010004;
        /**  the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int leftBackground=0x7f010010;
        /**  Default style for the Switch widget. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mySwitchStyleAttr=0x7f01001b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
         */
        public static final int orientation=0x7f01000f;
        /**  if the switch should operate like iOS UISwitch 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pushStyle=0x7f010006;
        /**  The background when right side of the switch is visible 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int rightBackground=0x7f010011;
        /**  Minimum height for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinHeight=0x7f01000d;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchMinWidth=0x7f01000c;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int switchPadding=0x7f01000e;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int switchTextAppearanceAttrib=0x7f01000b;
        /**  Present the text in ALL CAPS. This may use a small-caps form when available. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textAllCaps=0x7f01001a;
        /**  Color of the text selection highlight. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHighlight=0x7f010017;
        /**  Color of the hint text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorHint=0x7f010018;
        /**  Color of the links. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textColorLink=0x7f010019;
        /**  Text to use when the switch is in the unchecked/"off" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOff=0x7f010003;
        /**  Text to use when the switch is in the checked/"on" state. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
         */
        public static final int textOn=0x7f010002;
        /**  if text should be drawn on the Thumb or On the track. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textOnThumb=0x7f010007;
        /**  Style (bold, italic, bolditalic) for the text. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static final int textStyle=0x7f010015;
        /**  Drawable to use as the "thumb" that switches back and forth. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int thumb=0x7f010000;
        /**  if the thumb should be allowed to move more beyond the switch boundaries 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbExtraMovement=0x7f010008;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int thumbTextPadding=0x7f010009;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int track=0x7f010001;
        /**  Amount of padding on either side of text within the switch track. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int trackTextPadding=0x7f01000a;
        /**  Typeface (normal, sans, serif, monospace) for the text. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int typeface=0x7f010016;
    }
    public static final class color {
        public static final int biorhythm_emo=0x7f05001c;
        public static final int biorhythm_int=0x7f05001d;
        public static final int biorhythm_per=0x7f05001e;
        /**  BIO Rhythm Color 
         */
        public static final int biorhythm_phy=0x7f05001b;
        public static final int black=0x7f050004;
        public static final int black_overlay=0x7f050000;
        public static final int blue=0x7f050006;
        public static final int blue_transparent=0x7f050007;
        /**  BMI COLOR 
         */
        public static final int bmi_1=0x7f050016;
        public static final int bmi_2=0x7f050017;
        public static final int bmi_3=0x7f050018;
        public static final int bmi_4=0x7f050019;
        public static final int bmi_5=0x7f05001a;
        public static final int chart_bio=0x7f050022;
        /**  Chart Color 
         */
        public static final int chart_bk=0x7f050021;
        public static final int chart_bmi=0x7f050025;
        public static final int chart_hr=0x7f050023;
        public static final int chart_stress=0x7f050024;
        public static final int darkgray=0x7f05000c;
        public static final int gold=0x7f050002;
        public static final int gray=0x7f05000b;
        public static final int gray86=0x7f05000f;
        public static final int green=0x7f050009;
        public static final int lawngreen=0x7f05000a;
        public static final int lightblue=0x7f050005;
        public static final int lightgray=0x7f05000e;
        public static final int magenta=0x7f050013;
        public static final int mint=0x7f050015;
        public static final int my_gray=0x7f05000d;
        public static final int opaque_shadow=0x7f050010;
        public static final int orange=0x7f050014;
        public static final int red=0x7f050008;
        /**  skin 
         */
        public static final int skin_1=0x7f05001f;
        public static final int skin_2=0x7f050020;
        public static final int stat_label_background=0x7f050011;
        public static final int stat_label_text=0x7f050012;
        /**  Stress Color 
         */
        public static final int stressLv1=0x7f050026;
        public static final int stressLv2=0x7f050027;
        public static final int stressLv3=0x7f050028;
        public static final int stressLv4=0x7f050029;
        public static final int stressLv5=0x7f05002a;
        public static final int transparent=0x7f050001;
        public static final int white=0x7f050003;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 
         */
        public static final int activity_horizontal_margin=0x7f060000;
        public static final int activity_vertical_margin=0x7f060001;
    }
    public static final class drawable {
        public static final int bluetooth_icon=0x7f020000;
        public static final int btn_1=0x7f020001;
        public static final int button_off=0x7f020002;
        public static final int button_on=0x7f020003;
        public static final int etc=0x7f020004;
        public static final int game_button_off=0x7f020005;
        public static final int ic_launcher=0x7f020006;
        public static final int icon=0x7f020007;
        public static final int icon_acc=0x7f020008;
        public static final int icon_bluetooth_off_a=0x7f020009;
        public static final int icon_bluetooth_off_b=0x7f02000a;
        public static final int icon_bluetooth_on=0x7f02000b;
        public static final int icon_data=0x7f02000c;
        public static final int icon_device=0x7f02000d;
        public static final int icon_log=0x7f02000e;
        public static final int icon_next=0x7f02000f;
        public static final int icon_option_off_a=0x7f020010;
        public static final int icon_option_off_b=0x7f020011;
        public static final int icon_option_on=0x7f020012;
        public static final int icon_play_off_a=0x7f020013;
        public static final int icon_play_off_b=0x7f020014;
        public static final int icon_play_on=0x7f020015;
        public static final int icon_save_off_a=0x7f020016;
        public static final int icon_save_off_b=0x7f020017;
        public static final int icon_save_on=0x7f020018;
        public static final int icon_stop_off_a=0x7f020019;
        public static final int icon_stop_off_b=0x7f02001a;
        public static final int icon_stop_on=0x7f02001b;
        public static final int list_click_1=0x7f02001c;
        public static final int m1_icon=0x7f02001d;
        public static final int main_background_black=0x7f02001e;
        public static final int main_background_white=0x7f02001f;
        public static final int main_start=0x7f020020;
        public static final int off_bar=0x7f020021;
        public static final int off_button=0x7f020022;
        public static final int on_bar=0x7f020023;
        public static final int on_button=0x7f020024;
        public static final int progress_1=0x7f020025;
        public static final int smask_background_copy=0x7f020026;
        public static final int text_clr_check2=0x7f020027;
        public static final int text_clr_click=0x7f020028;
        public static final int title_bar_off=0x7f020029;
        public static final int title_bar_on=0x7f02002a;
    }
    public static final class id {
        public static final int DevInfoZone=0x7f04000c;
        public static final int ItemSelectZone=0x7f040012;
        public static final int ResultZone=0x7f04000f;
        public static final int TitlezoneLayout=0x7f040008;
        public static final int bold=0x7f040003;
        public static final int button_scan=0x7f040013;
        public static final int horizontal=0x7f040000;
        public static final int imageView1=0x7f040009;
        public static final int italic=0x7f040004;
        public static final int iv_selectedDev=0x7f04000d;
        public static final int monospace=0x7f040007;
        public static final int new_devices=0x7f040011;
        public static final int normal=0x7f040002;
        public static final int progress_measure=0x7f04000b;
        public static final int sans=0x7f040005;
        public static final int serif=0x7f040006;
        public static final int t1=0x7f04000a;
        public static final int title_new_devices=0x7f040010;
        public static final int tv_selectedDev=0x7f04000e;
        public static final int vertical=0x7f040001;
    }
    public static final class layout {
        public static final int activity_bluetooth_search=0x7f030000;
        public static final int dev_name=0x7f030001;
    }
    public static final class string {
        public static final int BTConnection=0x7f070008;
        public static final int action_settings=0x7f070001;
        public static final int alreadyConnected=0x7f070005;
        public static final int app_name=0x7f070000;
        public static final int bluetooth=0x7f07000c;
        public static final int findBTDevice=0x7f070004;
        public static final int hello_world=0x7f070002;
        public static final int newDevices=0x7f07000b;
        public static final int searchDevice=0x7f070009;
        public static final int searchedDevice=0x7f07000a;
        public static final int title_activity_setting=0x7f070003;
        public static final int tryBTActive=0x7f070007;
        public static final int tryBTConnect=0x7f070006;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f080000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f080001;
    }
    public static final class styleable {
        /** 
         Declare custom theme attributes that allow changing which styles are
         used for button bars depending on the API level.
         ?android:attr/buttonBarStyle is new as of API 11 so this is
         necessary to support previous API levels.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MySwitch_backgroundMask com.dropking.game:backgroundMask}</code></td><td> We need a mask drawable to mask the background, then draw the track </td></tr>
           <tr><td><code>{@link #MySwitch_drawableOff com.dropking.game:drawableOff}</code></td><td> drawablw to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_drawableOn com.dropking.game:drawableOn}</code></td><td> drawablw to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_leftBackground com.dropking.game:leftBackground}</code></td><td> the track drawable will be drawn on top of these background.</td></tr>
           <tr><td><code>{@link #MySwitch_orientation com.dropking.game:orientation}</code></td><td></td></tr>
           <tr><td><code>{@link #MySwitch_pushStyle com.dropking.game:pushStyle}</code></td><td> if the switch should operate like iOS UISwitch </td></tr>
           <tr><td><code>{@link #MySwitch_rightBackground com.dropking.game:rightBackground}</code></td><td> The background when right side of the switch is visible </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinHeight com.dropking.game:switchMinHeight}</code></td><td> Minimum height for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchMinWidth com.dropking.game:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #MySwitch_switchPadding com.dropking.game:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #MySwitch_switchTextAppearanceAttrib com.dropking.game:switchTextAppearanceAttrib}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_textOff com.dropking.game:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOn com.dropking.game:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #MySwitch_textOnThumb com.dropking.game:textOnThumb}</code></td><td> if text should be drawn on the Thumb or On the track.</td></tr>
           <tr><td><code>{@link #MySwitch_thumb com.dropking.game:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #MySwitch_thumbExtraMovement com.dropking.game:thumbExtraMovement}</code></td><td> if the thumb should be allowed to move more beyond the switch boundaries </td></tr>
           <tr><td><code>{@link #MySwitch_thumbTextPadding com.dropking.game:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #MySwitch_track com.dropking.game:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           <tr><td><code>{@link #MySwitch_trackTextPadding com.dropking.game:trackTextPadding}</code></td><td> Amount of padding on either side of text within the switch track.</td></tr>
           </table>
           @see #MySwitch_backgroundMask
           @see #MySwitch_drawableOff
           @see #MySwitch_drawableOn
           @see #MySwitch_leftBackground
           @see #MySwitch_orientation
           @see #MySwitch_pushStyle
           @see #MySwitch_rightBackground
           @see #MySwitch_switchMinHeight
           @see #MySwitch_switchMinWidth
           @see #MySwitch_switchPadding
           @see #MySwitch_switchTextAppearanceAttrib
           @see #MySwitch_textOff
           @see #MySwitch_textOn
           @see #MySwitch_textOnThumb
           @see #MySwitch_thumb
           @see #MySwitch_thumbExtraMovement
           @see #MySwitch_thumbTextPadding
           @see #MySwitch_track
           @see #MySwitch_trackTextPadding
         */
        public static final int[] MySwitch = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009, 0x7f01000a, 0x7f01000b,
            0x7f01000c, 0x7f01000d, 0x7f01000e, 0x7f01000f,
            0x7f010010, 0x7f010011, 0x7f010012
        };
        /**
          <p>
          @attr description
           We need a mask drawable to mask the background, then draw the track 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:backgroundMask
        */
        public static final int MySwitch_backgroundMask = 18;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the unchecked/"off" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:drawableOff
        */
        public static final int MySwitch_drawableOff = 5;
        /**
          <p>
          @attr description
           drawablw to use when the switch is in the checked/"on" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:drawableOn
        */
        public static final int MySwitch_drawableOn = 4;
        /**
          <p>
          @attr description
           the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency 
 The background when left side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:leftBackground
        */
        public static final int MySwitch_leftBackground = 16;
        /**
          <p>This symbol is the offset where the {@link com.dropking.game.R.attr#orientation}
          attribute's value can be found in the {@link #MySwitch} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>1</td><td> the switch moves only on the x-axis(horizontally) </td></tr>
<tr><td><code>vertical</code></td><td>0</td><td> the switch moves only on the y-axis(vertically) </td></tr>
</table>
          @attr name com.dropking.game:orientation
        */
        public static final int MySwitch_orientation = 15;
        /**
          <p>
          @attr description
           if the switch should operate like iOS UISwitch 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:pushStyle
        */
        public static final int MySwitch_pushStyle = 6;
        /**
          <p>
          @attr description
           The background when right side of the switch is visible 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:rightBackground
        */
        public static final int MySwitch_rightBackground = 17;
        /**
          <p>
          @attr description
           Minimum height for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:switchMinHeight
        */
        public static final int MySwitch_switchMinHeight = 13;
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:switchMinWidth
        */
        public static final int MySwitch_switchMinWidth = 12;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:switchPadding
        */
        public static final int MySwitch_switchPadding = 14;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:switchTextAppearanceAttrib
        */
        public static final int MySwitch_switchTextAppearanceAttrib = 11;
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.dropking.game:textOff
        */
        public static final int MySwitch_textOff = 3;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
          <p>This is a private symbol.
          @attr name com.dropking.game:textOn
        */
        public static final int MySwitch_textOn = 2;
        /**
          <p>
          @attr description
           if text should be drawn on the Thumb or On the track. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:textOnThumb
        */
        public static final int MySwitch_textOnThumb = 7;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:thumb
        */
        public static final int MySwitch_thumb = 0;
        /**
          <p>
          @attr description
           if the thumb should be allowed to move more beyond the switch boundaries 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:thumbExtraMovement
        */
        public static final int MySwitch_thumbExtraMovement = 8;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:thumbTextPadding
        */
        public static final int MySwitch_thumbTextPadding = 9;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.dropking.game:track
        */
        public static final int MySwitch_track = 1;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch track. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:trackTextPadding
        */
        public static final int MySwitch_trackTextPadding = 10;
        /** Attributes that can be used with a mySwitchTextAppearanceAttrib.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_TextColor com.dropking.game:TextColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_TextSize com.dropking.game:TextSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textAllCaps com.dropking.game:textAllCaps}</code></td><td> Present the text in ALL CAPS.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHighlight com.dropking.game:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorHint com.dropking.game:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textColorLink com.dropking.game:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_textStyle com.dropking.game:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #mySwitchTextAppearanceAttrib_typeface com.dropking.game:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #mySwitchTextAppearanceAttrib_TextColor
           @see #mySwitchTextAppearanceAttrib_TextSize
           @see #mySwitchTextAppearanceAttrib_textAllCaps
           @see #mySwitchTextAppearanceAttrib_textColorHighlight
           @see #mySwitchTextAppearanceAttrib_textColorHint
           @see #mySwitchTextAppearanceAttrib_textColorLink
           @see #mySwitchTextAppearanceAttrib_textStyle
           @see #mySwitchTextAppearanceAttrib_typeface
         */
        public static final int[] mySwitchTextAppearanceAttrib = {
            0x7f010013, 0x7f010014, 0x7f010015, 0x7f010016,
            0x7f010017, 0x7f010018, 0x7f010019, 0x7f01001a
        };
        /**
          <p>
          @attr description
           Text color. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:TextColor
        */
        public static final int mySwitchTextAppearanceAttrib_TextColor = 0;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:TextSize
        */
        public static final int mySwitchTextAppearanceAttrib_TextSize = 1;
        /**
          <p>
          @attr description
           Present the text in ALL CAPS. This may use a small-caps form when available. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:textAllCaps
        */
        public static final int mySwitchTextAppearanceAttrib_textAllCaps = 7;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:textColorHighlight
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHighlight = 4;
        /**
          <p>
          @attr description
           Color of the hint text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:textColorHint
        */
        public static final int mySwitchTextAppearanceAttrib_textColorHint = 5;
        /**
          <p>
          @attr description
           Color of the links. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.dropking.game:textColorLink
        */
        public static final int mySwitchTextAppearanceAttrib_textColorLink = 6;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.dropking.game:textStyle
        */
        public static final int mySwitchTextAppearanceAttrib_textStyle = 2;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>sans</code></td><td>1</td><td></td></tr>
<tr><td><code>serif</code></td><td>2</td><td></td></tr>
<tr><td><code>monospace</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.dropking.game:typeface
        */
        public static final int mySwitchTextAppearanceAttrib_typeface = 3;
    };
}
